import { CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Telescope, Star, Sun, Calendar, ExternalLink } from "lucide-react";
import Image from "next/image";

interface ProjectCardProps {
  title: string;
  description: string;
  category: string;
  year: string;
  imageUrl?: string;
  tags: string[];
  link?: string;
}

export const ProjectCard = ({
  title,
  description,
  category,
  year,
  imageUrl,
  tags,
  link
}: ProjectCardProps) => {
  const getCategoryIcon = (category: string) => {
    switch (category.toLowerCase()) {
      case "exoplanets":
        return <Telescope className="w-4 h-4" />;
      case "stellar":
        return <Star className="w-4 h-4" />;
      case "solar":
        return <Sun className="w-4 h-4" />;
      default:
        return <Calendar className="w-4 h-4" />;
    }
  };

  return (
    <div className="group relative bg-card border border-border rounded-lg overflow-hidden hover:shadow-lg hover:shadow-accent/10 transition-all duration-300 hover:border-accent/50">
      {/* Image Section */}
      {imageUrl && (
        <div className="relative h-48 w-full overflow-hidden">
          <Image
            src={imageUrl}
            alt={title}
            fill
            className="object-cover transition-transform duration-300 group-hover:scale-105"
            sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
          />
          <div className="absolute inset-0 bg-gradient-to-t from-background/80 to-transparent" />
        </div>
      )}

      {/* Content Section */}
      <CardHeader className="space-y-3">
        <div className="flex items-center justify-between">
          <Badge 
            variant="secondary" 
            className="flex items-center gap-1 text-xs bg-accent/10 text-accent border-accent/20"
          >
            {getCategoryIcon(category)}
            {category}
          </Badge>
          <Badge 
            variant="outline" 
            className="text-xs text-muted-foreground border-border"
          >
            {year}
          </Badge>
        </div>
        
        <div>
          <CardTitle className="text-lg font-semibold text-foreground group-hover:text-accent transition-colors duration-200">
            {title}
          </CardTitle>
          <CardDescription className="text-sm text-muted-foreground mt-2 line-clamp-3">
            {description}
          </CardDescription>
        </div>
      </CardHeader>

      <CardContent className="pt-0 space-y-4">
        {/* Tags */}
        <div className="flex flex-wrap gap-2">
          {tags.map((tag, index) => (
            <Badge
              key={index}
              variant="outline"
              className="text-xs px-2 py-1 bg-muted/30 text-muted-foreground border-muted hover:bg-accent/10 hover:text-accent hover:border-accent/20 transition-colors duration-200"
            >
              {tag}
            </Badge>
          ))}
        </div>

        {/* Action Button */}
        {link && (
          <Button
            variant="ghost"
            size="sm"
            className="w-full justify-center gap-2 text-accent hover:text-accent-foreground hover:bg-accent transition-all duration-200"
            asChild
          >
            <a href={link} target="_blank" rel="noopener noreferrer">
              View Details
              <ExternalLink className="w-3 h-3" />
            </a>
          </Button>
        )}
      </CardContent>

      {/* Hover Effect Overlay */}
      <div className="absolute inset-0 pointer-events-none bg-gradient-to-r from-accent/0 to-accent/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
    </div>
  );
};